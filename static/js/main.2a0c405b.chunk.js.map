{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","todosWithUsers","getIdForTodo","biggest","forEach","App","useState","setTodos","titleInput","setTitleInput","titleSelectError","setTitleSelectError","selectedUser","setSelectedUser","userSelectError","setUserSelectError","action","method","onSubmit","event","preventDefault","trimedTitle","trim","prevTodos","type","value","onChange","target","replace","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a0c405b.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nconst getUser = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst getIdForTodo = (todos: Todo[]) => {\n  let biggest = 0;\n\n  todos.forEach(todo => {\n    if (todo.id > biggest) {\n      biggest = todo.id;\n    }\n  });\n\n  return biggest + 1;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosWithUsers);\n  const [titleInput, setTitleInput] = useState('');\n  const [titleSelectError, setTitleSelectError] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [userSelectError, setUserSelectError] = useState(false);\n\n  const clearForm = () => {\n    setTitleInput('');\n    setSelectedUser(0);\n    setTitleSelectError(false);\n    setUserSelectError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const trimedTitle = titleInput.trim();\n\n    if (!trimedTitle || selectedUser === 0) {\n      if (!trimedTitle) {\n        setTitleSelectError(true);\n      }\n\n      if (selectedUser === 0) {\n        setUserSelectError(true);\n      }\n\n      return;\n    }\n\n    const todo: Todo = {\n      id: getIdForTodo(todos),\n      title: titleInput,\n      completed: false,\n      userId: selectedUser,\n      user: getUser(selectedUser),\n    };\n\n    setTodos((prevTodos) => [...prevTodos, todo]);\n    clearForm();\n  };\n\n  const handleOnInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (titleSelectError) {\n      setTitleSelectError(false);\n    }\n\n    setTitleInput(event.target.value.replace(/[^a-zа-я0-9\\s]/gi, ''));\n  };\n\n  const handleOnSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (userSelectError) {\n      setUserSelectError(false);\n    }\n\n    setSelectedUser(+event.target.value);\n  };\n\n  return (\n    <section className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={titleInput}\n            onChange={handleOnInput}\n            placeholder=\"Enter a title here\"\n          />\n\n          {titleSelectError && (\n            <p className=\"error\">Please enter a title</p>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            id=\"select\"\n            onChange={handleOnSelect}\n            value={selectedUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }: User) => (\n              <option value={id} key={id}>{name}</option>\n            ))}\n          </select>\n\n          {userSelectError && (\n            <p className=\"error\">Please choose a user</p>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <div className=\"TodoList\">\n        <TodoList todos={todos} />\n      </div>\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}